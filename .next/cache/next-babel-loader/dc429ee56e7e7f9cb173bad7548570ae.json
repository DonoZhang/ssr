{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sangermes/Desktop/BlockBit/Projects/todo-list/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport reducer from '../reducers/reducer';\nimport nanoid from 'nanoid';\n\nvar App = function App() {\n  var _React$useReducer = React.useReducer(reducer, {\n    currentTodo: '',\n    todos: []\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var add = function add() {\n    if (state.currentTodo) {\n      dispatch({\n        type: 'add',\n        payload: {\n          id: nanoid(),\n          name: state.currentTodo,\n          completed: false,\n          createdAt: \"\".concat(_Date$now())\n        }\n      });\n      dispatch({\n        type: 'set-current',\n        payload: ''\n      });\n    }\n  };\n\n  var edit = function edit(todo) {\n    dispatch({\n      type: 'update',\n      payload: todo\n    });\n  };\n\n  var del = function del(todo) {\n    dispatch({\n      type: 'delete',\n      payload: todo\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"To Do List\")), __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      add();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: state.currentTodo,\n    onChange: function onChange(event) {\n      dispatch({\n        type: 'set-current',\n        payload: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Add\")), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, state.todos.map(function (todo) {\n    return __jsx(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: todo.name,\n      onChange: function onChange(event) {\n        edit(_objectSpread({}, todo, {\n          name: event.target.value\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        del(todo);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Delete\"));\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sangermes/Desktop/BlockBit/Projects/todo-list/pages/index.tsx"],"names":["React","reducer","nanoid","App","useReducer","currentTodo","todos","state","dispatch","add","type","payload","id","name","completed","createdAt","edit","todo","del","event","preventDefault","target","value","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport reducer from '../reducers/reducer';\nimport nanoid from 'nanoid';\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, {\n    currentTodo: '',\n    todos: [],\n  });\n\n  const add = () => {\n    if (state.currentTodo) {\n      dispatch({\n        type: 'add',\n        payload: {\n          id: nanoid(),\n          name: state.currentTodo,\n          completed: false,\n          createdAt: `${Date.now()}`,\n        }\n      });\n      dispatch({ type: 'set-current', payload: '' });\n    }\n  };\n  \n  const edit = (todo) => {\n    dispatch({ type: 'update', payload: todo });\n  };\n\n  const del = (todo) => {\n    dispatch({ type: 'delete', payload: todo });\n  };\n\n  return (\n    <>\n      <header>\n        <h2>To Do List</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            add();\n          }}\n        >\n          <input\n            type=\"text\"\n            value={state.currentTodo}\n            onChange={event => {\n              dispatch({ type: 'set-current', payload: event.target.value });\n            }}\n          />\n          <button type='submit'>Add</button>\n        </form>\n        <ul>\n          {state.todos.map(todo => (\n            <li key={todo.id}>\n              <input\n                type=\"text\"\n                value={todo.name}\n                onChange={event => {\n                  edit({ ...todo, name: event.target.value });\n                }}\n              />\n              <button\n                onClick={() => {\n                  del(todo);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}